library(shiny)
library(shinydashboard)
# Define UI for application that draws a histogram
ui <- dashboardPage(
   
   # Application title
   dashboardHeader(title = "Histogram or boxplot"),
   
   # Sidebar  
   dashboardSidebar(
       selectInput(inputId = "type",
                   label = "Choose your plot type",
                   choices = c(histogram = "histogram",
                               boxplot = "boxplot"), selected = "histogram"),
       conditionalPanel(condition = "input.type == 'histogram'",
                        sliderInput(inputId = "breaks",
                                    label = "Number of bins histogram",
                                    value = 50, min = 0, max = 100, step = 2)),
       numericInput(inputId = "mean", label = "Choose your mean", min = 0, value = 100),
       numericInput(inputId = "sd", label = "Choose your sd", value = 10),
       numericInput(inputId = "n", label = "Number of observtions", value = 1000),
   
   radioButtons(inputId = "color",label = "Choose your color",
                choices = c("Cyan", "Red", "Seagreen3"), selected = "Cyan"),
   textInput(inputId = "title", label = "Change the title of the histogram",
             value = "Plot")
    ),
      # Show a plot of the generated distribution
      dashboardBody(
          box(plotOutput(outputId = "plot"), status = "success", width = "500px", height = "500px",
              title = "Box 1", solidHeader = TRUE, collapsible = TRUE)
          
      )
)
# server is the same 
# Define server logic required to draw a histogram
server <- function(input, output) {
    data <- reactive({
        x <- rnorm(input$n, mean = input$mean, sd = input$sd)
        return(x)
    })
    output$plot <- renderPlot({
        if(input$type == "histogram") {
            if(input$breaks == 0) { breaks <- 1} else {breaks <- input$breaks}
            hist(x = data(), main = input$title, xlab = "x", breaks = breaks,
                 col = input$color)
        }
        if(input$type == "boxplot") {
            boxplot(x = data(), main = input$title, xlab = "x", breaks = input$breaks,
                    col = input$color)
        }
    })
}

# Run the application 
shinyApp(ui = ui, server = server)

